import signal
import sys
import socket
import os
import json
import vcgencmd
import PySimpleGUI as sg

def grace_exit(sig, frame):
    print("Closing the server.")
    s.close()
    sys.exit(0)

signal.signal(signal.SIGINT, grace_exit)

s = socket.socket()
host = '192.168.0.10'  
port = 5000
s.bind((host, port))
s.listen(5)

def get_temperature():
    return os.popen("vcgencmd measure_temp").readline()

def get_cpu_speed():
    return os.popen("vcgencmd measure_clock arm").readline()

def get_gpu_speed():
    return os.popen("vcgencmd measure_clock core").readline()

def get_memory_info():
    mem_info = os.popen("free").readlines()
    used_memory = mem_info[1].split()[2]
    total_memory = mem_info[1].split()[1]
    return {'used_memory': used_memory, 'total_memory': total_memory}

def create_layout():
    layout = [
        [sg.Text('Connection Status:'), sg.Text('', size=(15, 1), key='connection_status')],
        [sg.Text('LED Status:'), sg.Text('◯', size=(2, 1), key='led_status')],
        [sg.Button('Exit')]
    ]
    return layout

def toggle_led_status(window):
    window['led_status'].update('⚫' if window['led_status'].get() == '◯' else '◯')

def update_gui(window, data):
    window['connection_status'].update('Connected', text_color='green')
    window['led_status'].update('◯')  # Toggle Unicode Led to be empty
    window.read(timeout=0)  # Force the window to update immediately
    window['led_status'].update('⚫')  # Update Unicode Led to filled
    window.read(timeout=0)  # Force the window to update immediately
    window['led_status'].update('◯')  # Toggle Unicode Led to be empty
    window['connection_status'].update('Disconnected', text_color='red')

def main():
    layout = create_layout()
    window = sg.Window('System Monitor', layout, finalize=True)

    while True:
        try:
            c, addr = s.accept()
            print('Got connection from', addr)

            temperature = get_temperature()
            cpu_speed = get_cpu_speed()
            gpu_speed = get_gpu_speed()
            memory_info = get_memory_info()

            data = {
                "Temperature": temperature,
                "CPU_Speed": cpu_speed,
                "GPU_Speed": gpu_speed,
                "Used_Memory": memory_info['used_memory'],
                "Total_Memory": memory_info['total_memory'],
            }

            update_gui(window, data)

            c.close()
        except Exception as e:
            print(f"Error: {e}")

if __name__ == "__main__":
    main()
